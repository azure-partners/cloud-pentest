from collections import defaultdict
from pprint import pprint
import socket
import sublist3r
from termcolor import cprint
cprint = lambda *args: None

def find_subdomains():
    domain_ips = defaultdict(list)
    subdomains = sublist3r.main('azureedge.net', 40, None, ports=None, silent=True, verbose=False, enable_bruteforce=False, engines='ssl')
    cprint(f"[-] Find IP Addresses for azureedge.net", 'blue')
    for sd in subdomains:
        try:
            sd = sd.rstrip()
            ip = socket.gethostbyname(sd)
            cprint(f"{sd}: {ip}", 'green')  
            domain_ips[ip].append(sd)
        except socket.gaierror:
            cprint(f"IP Address for {sd} Not Found", 'red')
    domain_ips = {key: value for key,value in domain_ips.items() if len(value) > 1}
    pprint(domain_ips)

if __name__ == "__main__":
    find_subdomains()